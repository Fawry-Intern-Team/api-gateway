spring.application.name=api-gateway
server.port=8080
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Product Service Route
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/{version}/products/**,/products/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=productService
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/product

# Auth Service Route
spring.cloud.gateway.routes[1].id=auth-service
spring.cloud.gateway.routes[1].uri=lb://auth-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/{version}/auth/**,/auth/**
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=authService
spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback/auth

# Order Service Route
spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/{version}/order/**,/order/**
spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.name=orderService
spring.cloud.gateway.routes[2].filters[0].args.fallbackUri=forward:/fallback/order

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379

# JWT Secret
jwt.secret=Z2V0LWFjdHVhbC1rZXktZnJvbS1wcm9wcy1maWxlLW9yLWVudi1zZWN1cmVseQ==
spring.security.oauth2.resourceserver.jwt.secret=Z2V0LWFjdHVhbC1rZXktZnJvbS1wcm9wcy1maWxlLW9yLWVudi1zZWN1cmVseQ==

# Gateway Logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web.server.adapter=DEBUG


# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.authService.sliding-window-size=10
resilience4j.circuitbreaker.instances.authService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.authService.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.authService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.authService.minimum-number-of-calls=5

resilience4j.circuitbreaker.instances.productService.sliding-window-size=10
resilience4j.circuitbreaker.instances.productService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.productService.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.productService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.productService.minimum-number-of-calls=5

resilience4j.circuitbreaker.instances.orderService.sliding-window-size=10
resilience4j.circuitbreaker.instances.orderService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.orderService.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.orderService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.orderService.minimum-number-of-calls=5

# Retry Configuration
resilience4j.retry.instances.authService.max-attempts=3
resilience4j.retry.instances.authService.wait-duration=1s
resilience4j.retry.instances.productService.max-attempts=3
resilience4j.retry.instances.productService.wait-duration=1s
resilience4j.retry.instances.orderService.max-attempts=3
resilience4j.retry.instances.orderService.wait-duration=1s